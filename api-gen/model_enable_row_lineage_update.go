/*
Apache Iceberg REST Catalog API

Defines the specification for the first version of the REST Catalog API. Implementations should ideally support both Iceberg table specs v1 and v2, with priority given to v2.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package icebergclient

import (
	"encoding/json"
)

// checks if the EnableRowLineageUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnableRowLineageUpdate{}

// EnableRowLineageUpdate struct for EnableRowLineageUpdate
type EnableRowLineageUpdate struct {
	BaseUpdate
	Action *string `json:"action,omitempty"`
}

// NewEnableRowLineageUpdate instantiates a new EnableRowLineageUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnableRowLineageUpdate() *EnableRowLineageUpdate {
	this := EnableRowLineageUpdate{}
	return &this
}

// NewEnableRowLineageUpdateWithDefaults instantiates a new EnableRowLineageUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnableRowLineageUpdateWithDefaults() *EnableRowLineageUpdate {
	this := EnableRowLineageUpdate{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *EnableRowLineageUpdate) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnableRowLineageUpdate) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *EnableRowLineageUpdate) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *EnableRowLineageUpdate) SetAction(v string) {
	o.Action = &v
}

func (o EnableRowLineageUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnableRowLineageUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedBaseUpdate, errBaseUpdate := json.Marshal(o.BaseUpdate)
	if errBaseUpdate != nil {
		return map[string]interface{}{}, errBaseUpdate
	}
	errBaseUpdate = json.Unmarshal([]byte(serializedBaseUpdate), &toSerialize)
	if errBaseUpdate != nil {
		return map[string]interface{}{}, errBaseUpdate
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	return toSerialize, nil
}

type NullableEnableRowLineageUpdate struct {
	value *EnableRowLineageUpdate
	isSet bool
}

func (v NullableEnableRowLineageUpdate) Get() *EnableRowLineageUpdate {
	return v.value
}

func (v *NullableEnableRowLineageUpdate) Set(val *EnableRowLineageUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableEnableRowLineageUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableEnableRowLineageUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnableRowLineageUpdate(val *EnableRowLineageUpdate) *NullableEnableRowLineageUpdate {
	return &NullableEnableRowLineageUpdate{value: val, isSet: true}
}

func (v NullableEnableRowLineageUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnableRowLineageUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


